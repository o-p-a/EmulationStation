name: Build ES for Win32

on:
  push:
    branches:
      - 'sdl_test'

jobs:
  build:
    runs-on:
      # https://github.com/actions/runner-images/blob/main/images/win/Windows2022-Readme.md
      windows-2022

    env:
      # Build parameters for CMake
      BUILD_TYPE: Release
      Platform: Win32

    defaults:
      run:
        shell: cmd

    steps:
      # Check-out repository under $GITHUB_WORKSPACE
      # https://github.com/actions/checkout
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # Discover location of MSBuild tool and to PATH environment variables
      # https://github.com/microsoft/setup-msbuild
      - name: Locate MSBuild
        uses: microsoft/setup-msbuild@v2

      # Use vcpkg to download and build the latest SDL2
      - name: Build SDL2 static library
        run: vcpkg install sdl2:x86-windows-static-md

      # Setup environment variables for subsequent steps
      # Note: Forward slashes are used for CMake compatibility
      - name: Set up environment
        run: |
          set VCPKG=%VCPKG_INSTALLATION_ROOT%/installed/x86-windows-static-md
          set "VCPKG=%VCPKG:\=/%"
          echo VCPKG=%VCPKG%>> %GITHUB_ENV%
          echo SDL2_INCLUDE_DIR=%VCPKG%/include/SDL2>> %GITHUB_ENV%
          echo SDL2_LIBRARY=%VCPKG%/lib/SDL2-static.lib>> %GITHUB_ENV%
          echo SDL2MAIN_LIBRAY=%VCPKG%/lib/manual-link/SDL2main.lib>> %GITHUB_ENV%

      # Use CMake to create Visual Studio project in build folder
      - name: Create Visual Studio project
        working-directory: ${{runner.workspace}}
        run: cmake ${{github.workspace}}
          -B build
          -A %Platform%
          -DSDL2_INCLUDE_DIR=%SDL2_INCLUDE_DIR%
          -DSDL2_LIBRARY=%SDL2_LIBRARY%
          -DSDL2MAIN_LIBRAY=%SDL2MAIN_LIBRAY%
          -DCMAKE_EXE_LINKER_FLAGS=/SAFESEH:NO

      - name: dir
        working-directory: C:/vcpkg/installed/x86-windows-static-md
        run: dir /s

      # Use CMake to build project
      - name: Build EmulationStation
        working-directory: ${{runner.workspace}}
        run: cmake --build build --config %BUILD_TYPE%

      # Copy all other dependencies into Release folder
      # Note: Forward slashes are replaced with back slashes for this step
      - name: Collect dependencies
        working-directory: ${{github.workspace}}/Release
        run: |
          xcopy ..\resources .\resources /h /i /c /k /e /r /y

      # Uploads artifacts from workflow
      # https://github.com/actions/upload-artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: EmulationStation
          path: |
            ${{github.workspace}}\Release\*.exe
            ${{github.workspace}}\Release\*.dll
            ${{github.workspace}}\Release\resources\
